<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="5" passed="4" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-04-03T16:56:50 IST" name="Loan Department" finished-at="2024-04-03T16:56:50 IST" duration-ms="72">
    <groups>
    </groups>
    <test started-at="2024-04-03T16:56:50 IST" name="Personal Loan" finished-at="2024-04-03T16:56:50 IST" duration-ms="72">
      <class name="test.Testing1">
        <test-method signature="geturlname(java.lang.String)[pri:0, instance:test.Testing1@654f0d9c]" started-at="2024-04-03T16:56:50 IST" name="geturlname" finished-at="2024-04-03T16:56:50 IST" duration-ms="9" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[qualityAnalysys.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- geturlname -->
        <test-method signature="logindata(java.lang.String,java.lang.String)[pri:0, instance:test.Testing1@654f0d9c]" started-at="2024-04-03T16:56:50 IST" name="logindata" data-provider="getdata" finished-at="2024-04-03T16:56:50 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firstUserName]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[firstPassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logindata -->
        <test-method signature="logindata(java.lang.String,java.lang.String)[pri:0, instance:test.Testing1@654f0d9c]" started-at="2024-04-03T16:56:50 IST" name="logindata" data-provider="getdata" finished-at="2024-04-03T16:56:50 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[SecondUserName]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[SecondPassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logindata -->
        <test-method signature="logindata(java.lang.String,java.lang.String)[pri:0, instance:test.Testing1@654f0d9c]" started-at="2024-04-03T16:56:50 IST" name="logindata" data-provider="getdata" finished-at="2024-04-03T16:56:50 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[thirdUserName]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[thirdPassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logindata -->
      </class> <!-- test.Testing1 -->
      <class name="test.FailedTest">
        <test-method signature="failedtestcase()[pri:0, instance:test.FailedTest@30ee2816]" started-at="2024-04-03T16:56:50 IST" name="failedtestcase" finished-at="2024-04-03T16:56:50 IST" duration-ms="5" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at test.FailedTest.failedtestcase(FailedTest.java:10)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failedtestcase -->
      </class> <!-- test.FailedTest -->
    </test> <!-- Personal Loan -->
  </suite> <!-- Loan Department -->
</testng-results>
